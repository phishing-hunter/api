/**
 * Phishing Hunter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetApikey200Response from '../model/GetApikey200Response';
import GetScanner500Response from '../model/GetScanner500Response';
import GetUsersInfo200Response from '../model/GetUsersInfo200Response';
import PostApikeyCreate200Response from '../model/PostApikeyCreate200Response';
import PostApikeyCreateRequest from '../model/PostApikeyCreateRequest';
import PostApikeyDelete200Response from '../model/PostApikeyDelete200Response';

/**
* User service.
* @module ph/UserApi
* @version 1.0
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:ph/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApikey operation.
     * @callback module:ph/UserApi~getApikeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetApikey200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * APIキーの一覧を取得
     * @param {module:ph/UserApi~getApikeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetApikey200Response}
     */
    getApikey(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetApikey200Response;
      return this.apiClient.callApi(
        '/apikey', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsersInfo operation.
     * @callback module:ph/UserApi~getUsersInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUsersInfo200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ユーザ情報の取得
     * ユーザを識別するための情報とAPI利用状況を返す
     * @param {module:ph/UserApi~getUsersInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUsersInfo200Response}
     */
    getUsersInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetUsersInfo200Response;
      return this.apiClient.callApi(
        '/users/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postApikeyCreate operation.
     * @callback module:ph/UserApi~postApikeyCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostApikeyCreate200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * APIキーの作成
     * @param {Object} opts Optional parameters
     * @param {module:model/PostApikeyCreateRequest} opts.postApikeyCreateRequest 
     * @param {module:ph/UserApi~postApikeyCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostApikeyCreate200Response}
     */
    postApikeyCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['postApikeyCreateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostApikeyCreate200Response;
      return this.apiClient.callApi(
        '/apikey/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postApikeyDelete operation.
     * @callback module:ph/UserApi~postApikeyDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostApikeyDelete200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * APIキーの削除
     * @param {Object} opts Optional parameters
     * @param {module:model/PostApikeyCreate200Response} opts.postApikeyCreate200Response 
     * @param {module:ph/UserApi~postApikeyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostApikeyDelete200Response}
     */
    postApikeyDelete(opts, callback) {
      opts = opts || {};
      let postBody = opts['postApikeyCreate200Response'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostApikeyDelete200Response;
      return this.apiClient.callApi(
        '/apikey/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
