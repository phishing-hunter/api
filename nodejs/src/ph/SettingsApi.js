/**
 * Phishing Hunter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetApikeys200Response from '../model/GetApikeys200Response';
import GetNotifySlack200Response from '../model/GetNotifySlack200Response';
import GetScanner500Response from '../model/GetScanner500Response';
import PostNotifySlackRequest from '../model/PostNotifySlackRequest';
import PostScannerAdd200Response from '../model/PostScannerAdd200Response';

/**
* Settings service.
* @module ph/SettingsApi
* @version 1.0
*/
export default class SettingsApi {

    /**
    * Constructs a new SettingsApi. 
    * @alias module:ph/SettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApikeys operation.
     * @callback module:ph/SettingsApi~getApikeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetApikeys200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 外部サービス設定の取得
     * @param {module:ph/SettingsApi~getApikeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetApikeys200Response}
     */
    getApikeys(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetApikeys200Response;
      return this.apiClient.callApi(
        '/apikeys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNotifySlack operation.
     * @callback module:ph/SettingsApi~getNotifySlackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetNotifySlack200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 通知設定の一覧を取得
     * @param {module:ph/SettingsApi~getNotifySlackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetNotifySlack200Response}
     */
    getNotifySlack(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetNotifySlack200Response;
      return this.apiClient.callApi(
        '/notify', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postApikeys operation.
     * @callback module:ph/SettingsApi~postApikeysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostScannerAdd200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 外部サービス設定の更新
     * 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetApikeys200Response} opts.getApikeys200Response 
     * @param {module:ph/SettingsApi~postApikeysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostScannerAdd200Response}
     */
    postApikeys(opts, callback) {
      opts = opts || {};
      let postBody = opts['getApikeys200Response'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostScannerAdd200Response;
      return this.apiClient.callApi(
        '/apikeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postNotifySlack operation.
     * @callback module:ph/SettingsApi~postNotifySlackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostScannerAdd200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 通知設定の更新
     * @param {Object} opts Optional parameters
     * @param {module:model/PostNotifySlackRequest} opts.postNotifySlackRequest 
     * @param {module:ph/SettingsApi~postNotifySlackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostScannerAdd200Response}
     */
    postNotifySlack(opts, callback) {
      opts = opts || {};
      let postBody = opts['postNotifySlackRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostScannerAdd200Response;
      return this.apiClient.callApi(
        '/notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
