/**
 * Phishing Hunter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetScanner200Response from '../model/GetScanner200Response';
import GetScanner500Response from '../model/GetScanner500Response';
import PostScannerAdd200Response from '../model/PostScannerAdd200Response';
import PostScannerAddRequest from '../model/PostScannerAddRequest';

/**
* Scanner service.
* @module ph/ScannerApi
* @version 1.0
*/
export default class ScannerApi {

    /**
    * Constructs a new ScannerApi. 
    * @alias module:ph/ScannerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getScanner operation.
     * @callback module:ph/ScannerApi~getScannerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetScanner200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * スキャン対象のドメイン一覧の取得
     * @param {module:ph/ScannerApi~getScannerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetScanner200Response}
     */
    getScanner(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetScanner200Response;
      return this.apiClient.callApi(
        '/scanner', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postScannerAdd operation.
     * @callback module:ph/ScannerApi~postScannerAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostScannerAdd200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * スキャン対象のドメインの追加
     * @param {Object} opts Optional parameters
     * @param {module:model/PostScannerAddRequest} opts.postScannerAddRequest 
     * @param {module:ph/ScannerApi~postScannerAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostScannerAdd200Response}
     */
    postScannerAdd(opts, callback) {
      opts = opts || {};
      let postBody = opts['postScannerAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostScannerAdd200Response;
      return this.apiClient.callApi(
        '/scanner/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postScannerRemove operation.
     * @callback module:ph/ScannerApi~postScannerRemoveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostScannerAdd200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * スキャン対象のドメイン一覧の削除
     * @param {Object} opts Optional parameters
     * @param {module:model/PostScannerAddRequest} opts.postScannerAddRequest 
     * @param {module:ph/ScannerApi~postScannerRemoveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostScannerAdd200Response}
     */
    postScannerRemove(opts, callback) {
      opts = opts || {};
      let postBody = opts['postScannerAddRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['custom_authorizer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostScannerAdd200Response;
      return this.apiClient.callApi(
        '/scanner/remove', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
