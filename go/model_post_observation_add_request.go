/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the PostObservationAddRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostObservationAddRequest{}

// PostObservationAddRequest struct for PostObservationAddRequest
type PostObservationAddRequest struct {
	Url *string `json:"url,omitempty"`
	Interval *string `json:"interval,omitempty"`
	Period *int32 `json:"period,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Expire *int32 `json:"expire,omitempty"`
	ApiConfig *PostObservationAddRequestApiConfig `json:"api_config,omitempty"`
}

// NewPostObservationAddRequest instantiates a new PostObservationAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostObservationAddRequest() *PostObservationAddRequest {
	this := PostObservationAddRequest{}
	return &this
}

// NewPostObservationAddRequestWithDefaults instantiates a new PostObservationAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostObservationAddRequestWithDefaults() *PostObservationAddRequest {
	this := PostObservationAddRequest{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PostObservationAddRequest) SetUrl(v string) {
	o.Url = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetInterval() string {
	if o == nil || isNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetIntervalOk() (*string, bool) {
	if o == nil || isNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasInterval() bool {
	if o != nil && !isNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *PostObservationAddRequest) SetInterval(v string) {
	o.Interval = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetPeriod() int32 {
	if o == nil || isNil(o.Period) {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetPeriodOk() (*int32, bool) {
	if o == nil || isNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasPeriod() bool {
	if o != nil && !isNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *PostObservationAddRequest) SetPeriod(v int32) {
	o.Period = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PostObservationAddRequest) SetComment(v string) {
	o.Comment = &v
}

// GetExpire returns the Expire field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetExpire() int32 {
	if o == nil || isNil(o.Expire) {
		var ret int32
		return ret
	}
	return *o.Expire
}

// GetExpireOk returns a tuple with the Expire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetExpireOk() (*int32, bool) {
	if o == nil || isNil(o.Expire) {
		return nil, false
	}
	return o.Expire, true
}

// HasExpire returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasExpire() bool {
	if o != nil && !isNil(o.Expire) {
		return true
	}

	return false
}

// SetExpire gets a reference to the given int32 and assigns it to the Expire field.
func (o *PostObservationAddRequest) SetExpire(v int32) {
	o.Expire = &v
}

// GetApiConfig returns the ApiConfig field value if set, zero value otherwise.
func (o *PostObservationAddRequest) GetApiConfig() PostObservationAddRequestApiConfig {
	if o == nil || isNil(o.ApiConfig) {
		var ret PostObservationAddRequestApiConfig
		return ret
	}
	return *o.ApiConfig
}

// GetApiConfigOk returns a tuple with the ApiConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequest) GetApiConfigOk() (*PostObservationAddRequestApiConfig, bool) {
	if o == nil || isNil(o.ApiConfig) {
		return nil, false
	}
	return o.ApiConfig, true
}

// HasApiConfig returns a boolean if a field has been set.
func (o *PostObservationAddRequest) HasApiConfig() bool {
	if o != nil && !isNil(o.ApiConfig) {
		return true
	}

	return false
}

// SetApiConfig gets a reference to the given PostObservationAddRequestApiConfig and assigns it to the ApiConfig field.
func (o *PostObservationAddRequest) SetApiConfig(v PostObservationAddRequestApiConfig) {
	o.ApiConfig = &v
}

func (o PostObservationAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostObservationAddRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !isNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !isNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !isNil(o.Expire) {
		toSerialize["expire"] = o.Expire
	}
	if !isNil(o.ApiConfig) {
		toSerialize["api_config"] = o.ApiConfig
	}
	return toSerialize, nil
}

type NullablePostObservationAddRequest struct {
	value *PostObservationAddRequest
	isSet bool
}

func (v NullablePostObservationAddRequest) Get() *PostObservationAddRequest {
	return v.value
}

func (v *NullablePostObservationAddRequest) Set(val *PostObservationAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostObservationAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostObservationAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostObservationAddRequest(val *PostObservationAddRequest) *NullablePostObservationAddRequest {
	return &NullablePostObservationAddRequest{value: val, isSet: true}
}

func (v NullablePostObservationAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostObservationAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


