/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the GetApikey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApikey200Response{}

// GetApikey200Response struct for GetApikey200Response
type GetApikey200Response struct {
	ApiKeys map[string]interface{} `json:"api_keys,omitempty"`
}

// NewGetApikey200Response instantiates a new GetApikey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApikey200Response() *GetApikey200Response {
	this := GetApikey200Response{}
	return &this
}

// NewGetApikey200ResponseWithDefaults instantiates a new GetApikey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApikey200ResponseWithDefaults() *GetApikey200Response {
	this := GetApikey200Response{}
	return &this
}

// GetApiKeys returns the ApiKeys field value if set, zero value otherwise.
func (o *GetApikey200Response) GetApiKeys() map[string]interface{} {
	if o == nil || isNil(o.ApiKeys) {
		var ret map[string]interface{}
		return ret
	}
	return o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApikey200Response) GetApiKeysOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.ApiKeys) {
		return map[string]interface{}{}, false
	}
	return o.ApiKeys, true
}

// HasApiKeys returns a boolean if a field has been set.
func (o *GetApikey200Response) HasApiKeys() bool {
	if o != nil && !isNil(o.ApiKeys) {
		return true
	}

	return false
}

// SetApiKeys gets a reference to the given map[string]interface{} and assigns it to the ApiKeys field.
func (o *GetApikey200Response) SetApiKeys(v map[string]interface{}) {
	o.ApiKeys = v
}

func (o GetApikey200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApikey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiKeys) {
		toSerialize["api_keys"] = o.ApiKeys
	}
	return toSerialize, nil
}

type NullableGetApikey200Response struct {
	value *GetApikey200Response
	isSet bool
}

func (v NullableGetApikey200Response) Get() *GetApikey200Response {
	return v.value
}

func (v *NullableGetApikey200Response) Set(val *GetApikey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApikey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApikey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApikey200Response(val *GetApikey200Response) *NullableGetApikey200Response {
	return &NullableGetApikey200Response{value: val, isSet: true}
}

func (v NullableGetApikey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApikey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


