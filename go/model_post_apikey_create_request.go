/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the PostApikeyCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostApikeyCreateRequest{}

// PostApikeyCreateRequest struct for PostApikeyCreateRequest
type PostApikeyCreateRequest struct {
	Description *string `json:"description,omitempty"`
	Ip []string `json:"ip,omitempty"`
	Scope []string `json:"scope,omitempty"`
}

// NewPostApikeyCreateRequest instantiates a new PostApikeyCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostApikeyCreateRequest() *PostApikeyCreateRequest {
	this := PostApikeyCreateRequest{}
	return &this
}

// NewPostApikeyCreateRequestWithDefaults instantiates a new PostApikeyCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostApikeyCreateRequestWithDefaults() *PostApikeyCreateRequest {
	this := PostApikeyCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostApikeyCreateRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostApikeyCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PostApikeyCreateRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostApikeyCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *PostApikeyCreateRequest) GetIp() []string {
	if o == nil || isNil(o.Ip) {
		var ret []string
		return ret
	}
	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostApikeyCreateRequest) GetIpOk() ([]string, bool) {
	if o == nil || isNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *PostApikeyCreateRequest) HasIp() bool {
	if o != nil && !isNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given []string and assigns it to the Ip field.
func (o *PostApikeyCreateRequest) SetIp(v []string) {
	o.Ip = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *PostApikeyCreateRequest) GetScope() []string {
	if o == nil || isNil(o.Scope) {
		var ret []string
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostApikeyCreateRequest) GetScopeOk() ([]string, bool) {
	if o == nil || isNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *PostApikeyCreateRequest) HasScope() bool {
	if o != nil && !isNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given []string and assigns it to the Scope field.
func (o *PostApikeyCreateRequest) SetScope(v []string) {
	o.Scope = v
}

func (o PostApikeyCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostApikeyCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !isNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullablePostApikeyCreateRequest struct {
	value *PostApikeyCreateRequest
	isSet bool
}

func (v NullablePostApikeyCreateRequest) Get() *PostApikeyCreateRequest {
	return v.value
}

func (v *NullablePostApikeyCreateRequest) Set(val *PostApikeyCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostApikeyCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostApikeyCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostApikeyCreateRequest(val *PostApikeyCreateRequest) *NullablePostApikeyCreateRequest {
	return &NullablePostApikeyCreateRequest{value: val, isSet: true}
}

func (v NullablePostApikeyCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostApikeyCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


