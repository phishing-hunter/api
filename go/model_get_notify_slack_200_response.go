/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the GetNotifySlack200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNotifySlack200Response{}

// GetNotifySlack200Response struct for GetNotifySlack200Response
type GetNotifySlack200Response struct {
	Hunting *GetNotifySlack200ResponseHunting `json:"hunting,omitempty"`
	Observation *GetNotifySlack200ResponseHunting `json:"observation,omitempty"`
}

// NewGetNotifySlack200Response instantiates a new GetNotifySlack200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNotifySlack200Response() *GetNotifySlack200Response {
	this := GetNotifySlack200Response{}
	return &this
}

// NewGetNotifySlack200ResponseWithDefaults instantiates a new GetNotifySlack200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNotifySlack200ResponseWithDefaults() *GetNotifySlack200Response {
	this := GetNotifySlack200Response{}
	return &this
}

// GetHunting returns the Hunting field value if set, zero value otherwise.
func (o *GetNotifySlack200Response) GetHunting() GetNotifySlack200ResponseHunting {
	if o == nil || isNil(o.Hunting) {
		var ret GetNotifySlack200ResponseHunting
		return ret
	}
	return *o.Hunting
}

// GetHuntingOk returns a tuple with the Hunting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotifySlack200Response) GetHuntingOk() (*GetNotifySlack200ResponseHunting, bool) {
	if o == nil || isNil(o.Hunting) {
		return nil, false
	}
	return o.Hunting, true
}

// HasHunting returns a boolean if a field has been set.
func (o *GetNotifySlack200Response) HasHunting() bool {
	if o != nil && !isNil(o.Hunting) {
		return true
	}

	return false
}

// SetHunting gets a reference to the given GetNotifySlack200ResponseHunting and assigns it to the Hunting field.
func (o *GetNotifySlack200Response) SetHunting(v GetNotifySlack200ResponseHunting) {
	o.Hunting = &v
}

// GetObservation returns the Observation field value if set, zero value otherwise.
func (o *GetNotifySlack200Response) GetObservation() GetNotifySlack200ResponseHunting {
	if o == nil || isNil(o.Observation) {
		var ret GetNotifySlack200ResponseHunting
		return ret
	}
	return *o.Observation
}

// GetObservationOk returns a tuple with the Observation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotifySlack200Response) GetObservationOk() (*GetNotifySlack200ResponseHunting, bool) {
	if o == nil || isNil(o.Observation) {
		return nil, false
	}
	return o.Observation, true
}

// HasObservation returns a boolean if a field has been set.
func (o *GetNotifySlack200Response) HasObservation() bool {
	if o != nil && !isNil(o.Observation) {
		return true
	}

	return false
}

// SetObservation gets a reference to the given GetNotifySlack200ResponseHunting and assigns it to the Observation field.
func (o *GetNotifySlack200Response) SetObservation(v GetNotifySlack200ResponseHunting) {
	o.Observation = &v
}

func (o GetNotifySlack200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNotifySlack200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Hunting) {
		toSerialize["hunting"] = o.Hunting
	}
	if !isNil(o.Observation) {
		toSerialize["observation"] = o.Observation
	}
	return toSerialize, nil
}

type NullableGetNotifySlack200Response struct {
	value *GetNotifySlack200Response
	isSet bool
}

func (v NullableGetNotifySlack200Response) Get() *GetNotifySlack200Response {
	return v.value
}

func (v *NullableGetNotifySlack200Response) Set(val *GetNotifySlack200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotifySlack200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotifySlack200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotifySlack200Response(val *GetNotifySlack200Response) *NullableGetNotifySlack200Response {
	return &NullableGetNotifySlack200Response{value: val, isSet: true}
}

func (v NullableGetNotifySlack200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotifySlack200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


