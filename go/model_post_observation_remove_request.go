/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the PostObservationRemoveRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostObservationRemoveRequest{}

// PostObservationRemoveRequest struct for PostObservationRemoveRequest
type PostObservationRemoveRequest struct {
	Url *string `json:"url,omitempty"`
}

// NewPostObservationRemoveRequest instantiates a new PostObservationRemoveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostObservationRemoveRequest() *PostObservationRemoveRequest {
	this := PostObservationRemoveRequest{}
	return &this
}

// NewPostObservationRemoveRequestWithDefaults instantiates a new PostObservationRemoveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostObservationRemoveRequestWithDefaults() *PostObservationRemoveRequest {
	this := PostObservationRemoveRequest{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PostObservationRemoveRequest) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationRemoveRequest) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PostObservationRemoveRequest) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PostObservationRemoveRequest) SetUrl(v string) {
	o.Url = &v
}

func (o PostObservationRemoveRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostObservationRemoveRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullablePostObservationRemoveRequest struct {
	value *PostObservationRemoveRequest
	isSet bool
}

func (v NullablePostObservationRemoveRequest) Get() *PostObservationRemoveRequest {
	return v.value
}

func (v *NullablePostObservationRemoveRequest) Set(val *PostObservationRemoveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostObservationRemoveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostObservationRemoveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostObservationRemoveRequest(val *PostObservationRemoveRequest) *NullablePostObservationRemoveRequest {
	return &NullablePostObservationRemoveRequest{value: val, isSet: true}
}

func (v NullablePostObservationRemoveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostObservationRemoveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


