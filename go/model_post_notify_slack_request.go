/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the PostNotifySlackRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostNotifySlackRequest{}

// PostNotifySlackRequest struct for PostNotifySlackRequest
type PostNotifySlackRequest struct {
	Type *string `json:"type,omitempty"`
	WebhookUrl *string `json:"webhook_url,omitempty"`
	Service *string `json:"service,omitempty"`
}

// NewPostNotifySlackRequest instantiates a new PostNotifySlackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostNotifySlackRequest() *PostNotifySlackRequest {
	this := PostNotifySlackRequest{}
	return &this
}

// NewPostNotifySlackRequestWithDefaults instantiates a new PostNotifySlackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostNotifySlackRequestWithDefaults() *PostNotifySlackRequest {
	this := PostNotifySlackRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PostNotifySlackRequest) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNotifySlackRequest) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PostNotifySlackRequest) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PostNotifySlackRequest) SetType(v string) {
	o.Type = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *PostNotifySlackRequest) GetWebhookUrl() string {
	if o == nil || isNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNotifySlackRequest) GetWebhookUrlOk() (*string, bool) {
	if o == nil || isNil(o.WebhookUrl) {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *PostNotifySlackRequest) HasWebhookUrl() bool {
	if o != nil && !isNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *PostNotifySlackRequest) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *PostNotifySlackRequest) GetService() string {
	if o == nil || isNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNotifySlackRequest) GetServiceOk() (*string, bool) {
	if o == nil || isNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *PostNotifySlackRequest) HasService() bool {
	if o != nil && !isNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *PostNotifySlackRequest) SetService(v string) {
	o.Service = &v
}

func (o PostNotifySlackRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostNotifySlackRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.WebhookUrl) {
		toSerialize["webhook_url"] = o.WebhookUrl
	}
	if !isNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	return toSerialize, nil
}

type NullablePostNotifySlackRequest struct {
	value *PostNotifySlackRequest
	isSet bool
}

func (v NullablePostNotifySlackRequest) Get() *PostNotifySlackRequest {
	return v.value
}

func (v *NullablePostNotifySlackRequest) Set(val *PostNotifySlackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostNotifySlackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostNotifySlackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostNotifySlackRequest(val *PostNotifySlackRequest) *NullablePostNotifySlackRequest {
	return &NullablePostNotifySlackRequest{value: val, isSet: true}
}

func (v NullablePostNotifySlackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostNotifySlackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


