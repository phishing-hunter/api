/*
Phishing Hunter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package phishing_hunter

import (
	"encoding/json"
)

// checks if the PostObservationAddRequestApiConfigUrlscan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostObservationAddRequestApiConfigUrlscan{}

// PostObservationAddRequestApiConfigUrlscan struct for PostObservationAddRequestApiConfigUrlscan
type PostObservationAddRequestApiConfigUrlscan struct {
	Visibility *string `json:"visibility,omitempty"`
}

// NewPostObservationAddRequestApiConfigUrlscan instantiates a new PostObservationAddRequestApiConfigUrlscan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostObservationAddRequestApiConfigUrlscan() *PostObservationAddRequestApiConfigUrlscan {
	this := PostObservationAddRequestApiConfigUrlscan{}
	return &this
}

// NewPostObservationAddRequestApiConfigUrlscanWithDefaults instantiates a new PostObservationAddRequestApiConfigUrlscan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostObservationAddRequestApiConfigUrlscanWithDefaults() *PostObservationAddRequestApiConfigUrlscan {
	this := PostObservationAddRequestApiConfigUrlscan{}
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *PostObservationAddRequestApiConfigUrlscan) GetVisibility() string {
	if o == nil || isNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObservationAddRequestApiConfigUrlscan) GetVisibilityOk() (*string, bool) {
	if o == nil || isNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *PostObservationAddRequestApiConfigUrlscan) HasVisibility() bool {
	if o != nil && !isNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *PostObservationAddRequestApiConfigUrlscan) SetVisibility(v string) {
	o.Visibility = &v
}

func (o PostObservationAddRequestApiConfigUrlscan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostObservationAddRequestApiConfigUrlscan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullablePostObservationAddRequestApiConfigUrlscan struct {
	value *PostObservationAddRequestApiConfigUrlscan
	isSet bool
}

func (v NullablePostObservationAddRequestApiConfigUrlscan) Get() *PostObservationAddRequestApiConfigUrlscan {
	return v.value
}

func (v *NullablePostObservationAddRequestApiConfigUrlscan) Set(val *PostObservationAddRequestApiConfigUrlscan) {
	v.value = val
	v.isSet = true
}

func (v NullablePostObservationAddRequestApiConfigUrlscan) IsSet() bool {
	return v.isSet
}

func (v *NullablePostObservationAddRequestApiConfigUrlscan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostObservationAddRequestApiConfigUrlscan(val *PostObservationAddRequestApiConfigUrlscan) *NullablePostObservationAddRequestApiConfigUrlscan {
	return &NullablePostObservationAddRequestApiConfigUrlscan{value: val, isSet: true}
}

func (v NullablePostObservationAddRequestApiConfigUrlscan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostObservationAddRequestApiConfigUrlscan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


